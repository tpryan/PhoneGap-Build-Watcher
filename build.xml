<?xml version="1.0" encoding="UTF-8"?>
<project default="test.ant" name="watcher.dev" basedir=".">

	<property file="build.properties"/>

	<target name="build" depends="clean,copyFilesToBuild" description="Creating a clean copy of the site" />

	<target name="deployToWeb" depends="build,cleanWeb,uploadFilesToProd" description="Sending Files to Prod" />

	<target name="deployToPGB" depends="build,zip,uploadFilesToPGB" description="Sending Files to Phone Gap Build" />

	<target name="deployToAndroid" depends="deployToPGB, installOnToAndroidDevice" description="Sending Files to Phone Gap Build" />


	<target name="test.ant" description="Exports the script of the database ">
		<echo message="Testing ant in this environment. " />
		<echo message="basedir:     ${basedir}" />
		<echo message="ant.version: ${ant.version}" />
		<echo message="build.dir:     ${build.dir}" />
		<echo message="package.dir:     ${package.dir}" />
	</target>

	<target name="clean">
		<echo message="Cleaning Build Space"/>
		<delete dir="${build.dir}"/>
	</target>

	<target name="uploadFilesToPGB" description="Handles uploading files to PhoneGap Build">
		<echo message="Calling PhoneGap Build API's"/>
		<exec executable='curl' failonerror='true'>
			<arg value='-u'/>
			<arg value='${pgb.username}:${pgb.password}'/>
			<arg value='-X'/>
			<arg value='PUT'/>
			<arg value='-F'/>
			<arg value='file=@${package.dir}/${ant.project.name}.zip'/>
			<arg value='https://build.phonegap.com/api/v1/apps/${pgb.appid}'/>
		</exec>
	</target>

	<target name="installOnToAndroidDevice" description="Installs application onto an attached Android device">
		<echo message="Calling Commandline"/>
		<exec executable='./device.sh' failonerror='true'>
			<arg value='${pgb.appid}'/>
			<arg value='${pgb.username}'/>
			<arg value='${pgb.password}'/>
			<arg value='${package.dir}'/>
		</exec>
	</target>

	<target name="copyFilesToBuild" description="Create a gitless version of the source code.">
		<echo message="Copying Files to Build Location"/>
		<copy todir="${build.dir}" preservelastmodified="true">
			<fileset dir="${basedir}">
				<exclude name='.gitignore'/>
				<exclude name='.git/**'/>
				<exclude name='build.xml'/>
				<exclude name='build.properties'/>
				<exclude name='README'/>
			</fileset>	
		</copy>
	</target>

	<target name="uploadFilesToProd" description="Pushes application to production.">

		<echo message="Pushing Text to Prod"/>
		<ftp server="${ftp.server}" userid="${ftp.username}" password="${ftp.password}" 
				timediffauto="true"  retriesAllowed="1" passive="yes" remotedir="/examples/watcher" depends="yes" 
				action="send" verbose="${verbose}" binary="no" timestampGranularity="MINUTE">
			<fileset dir="${build.dir}">
				<include name="**/*.css"/>
				<include name="**/*.html"/>
				<include name="**/*.js"/>
				<include name="**/*.svg"/>
			</fileset>
		</ftp>

		<echo message="Pushing Binaries to Prod"/>
		<ftp server="${ftp.server}" userid="${ftp.username}" password="${ftp.password}" 
			timediffauto="true"  retriesAllowed="1" passive="yes" remotedir="/examples/watcher" depends="yes" 
			action="send" verbose="${verbose}" binary="yes" timestampGranularity="MINUTE">
			<fileset dir="${build.dir}">
				<include name="**/*.png*"/>
				<include name="**/*.eot*"/>
				<include name="**/*.ttf*"/>
				<include name="**/*.woff*"/>
			</fileset>
		</ftp>
		
	</target>

	<target name="zip" description="Creates a zip file of the build.">
		<echo message="Creating Zip File"/>
		<zip destfile="${package.dir}\${ant.project.name}.zip" basedir="${build.dir}"/>
	</target>

	<target name="cleanWeb" description="Empties out Remote Directory.">

		<echo message="Deleting from Prod"/>
		<ftp server="${ftp.server}" userid="${ftp.username}" password="${ftp.password}" 
				 passive="yes" remotedir="/examples/watcher" 
				action="del" verbose="${verbose}"  >
			<fileset>
				<include name="**/*.svg"/>
				<include name="**/*.eot"/>
				<include name="**/*.ttf"/>
				<include name="**/*.woff"/>
				<include name="**/*.css"/>
				<include name="**/*.html"/>
				<include name="**/*.js"/>
				<include name="**/*.png*"/>
				<include name="css"/>
			</fileset>

			<fileset dir="css" />
		</ftp>

		<ftp server="${ftp.server}" userid="${ftp.username}" password="${ftp.password}" 
				 passive="yes" remotedir="/examples/watcher" 
				action="rmdir" verbose="${verbose}"  >
			<fileset>
				<include name="**/**"/>
			</fileset>

		</ftp>

		
	</target>

</project>	